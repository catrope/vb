/* This file was generated by SableCC (http://www.sablecc.org/). */

package rm.node;

import rm.analysis.*;

@SuppressWarnings("nls")
public final class AGrtrRelop extends PRelop
{
    private TGrtrsym _grtrsym_;

    public AGrtrRelop()
    {
        // Constructor
    }

    public AGrtrRelop(
        @SuppressWarnings("hiding") TGrtrsym _grtrsym_)
    {
        // Constructor
        setGrtrsym(_grtrsym_);

    }

    @Override
    public Object clone()
    {
        return new AGrtrRelop(
            cloneNode(this._grtrsym_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGrtrRelop(this);
    }

    public TGrtrsym getGrtrsym()
    {
        return this._grtrsym_;
    }

    public void setGrtrsym(TGrtrsym node)
    {
        if(this._grtrsym_ != null)
        {
            this._grtrsym_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._grtrsym_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._grtrsym_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._grtrsym_ == child)
        {
            this._grtrsym_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._grtrsym_ == oldChild)
        {
            setGrtrsym((TGrtrsym) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
