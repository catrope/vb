/* This file was generated by SableCC (http://www.sablecc.org/). */

package rm.node;

import rm.analysis.*;

@SuppressWarnings("nls")
public final class AIdivMulop extends PMulop
{
    private TIdivsym _idivsym_;

    public AIdivMulop()
    {
        // Constructor
    }

    public AIdivMulop(
        @SuppressWarnings("hiding") TIdivsym _idivsym_)
    {
        // Constructor
        setIdivsym(_idivsym_);

    }

    @Override
    public Object clone()
    {
        return new AIdivMulop(
            cloneNode(this._idivsym_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIdivMulop(this);
    }

    public TIdivsym getIdivsym()
    {
        return this._idivsym_;
    }

    public void setIdivsym(TIdivsym node)
    {
        if(this._idivsym_ != null)
        {
            this._idivsym_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._idivsym_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._idivsym_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._idivsym_ == child)
        {
            this._idivsym_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._idivsym_ == oldChild)
        {
            setIdivsym((TIdivsym) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
